// TEST COMMENT
//THIS CODE IS FOR POSTER CLASS-Annie/ assit. Sifaw
//make sure you have imported: import android.text.TextUtils;
getPic.addSnapshotListener(new EventListener<DocumentSnapshot>() {
            @Override
            public void onEvent(@Nullable DocumentSnapshot documentSnapshot, @Nullable FirebaseFirestoreException e) {
                if (documentSnapshot != null && documentSnapshot.exists()) {
                    String url= documentSnapshot.getData().get("Pet Image").toString();
                    petPicture=url;
                    System.out.println(petPicture);
                    Uri uri= Uri.parse(url);
                    petPic.setImageURI(uri);
                }
            }
        });
        //sendFiler to database
        sendToFiler.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                final String pName= petname.getText().toString().trim();//send to users collection
                final String pType= pettype.getText().toString().trim();
                final String oState= ownstate.getText().toString().trim();
                final String desCrp= descrip.getText().toString();
                if(TextUtils.isEmpty(pName)){
                    petname.setError("Pet name required!");
                }if(TextUtils.isEmpty(pType)){
                    pettype.setError("Pet species required!");
                }if(TextUtils.isEmpty(oState)){
                    ownstate.setError("State name required!");
                }if(TextUtils.isEmpty(desCrp)){
                    descrip.setError("Description name required!");
                }
                filerInfo.put("petName",pName);
                filerInfo.put("petType",pType);
                filerInfo.put("ownerState",oState);
                filerInfo.put("description",desCrp);
                filerInfo.put("petPicture",petPicture);
                docref.update(filerInfo).addOnCompleteListener(new OnCompleteListener<Void>() {
                    @Override
                    public void onComplete(@NonNull Task<Void> task) {
                        if(task.isSuccessful()){
                            Toast.makeText(getActivity(),"Filer Uploaded",Toast.LENGTH_SHORT).show();
                        }
                    }
                });


            }
        });
----------------------------------------
//THIS CODE IS FOR CONTACT CLASS-Thanhtam/assit. Sifaw
protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.fragment_contact);
        //variables have already been placed in the source file
        ...

        /**
         * this sets the email from the user collection
         * */
        getEmail.addSnapshotListener(new EventListener<DocumentSnapshot>() {
            @Override
            public void onEvent(@Nullable DocumentSnapshot documentSnapshot, @Nullable FirebaseFirestoreException e) {
                if (documentSnapshot != null && documentSnapshot.exists()) {
                    ownerEmail.setText(documentSnapshot.getData().get("Email").toString());
                }
            }
        });
        /**
         * this sets the name,species,description
         * */
        docRef.addSnapshotListener(new EventListener<DocumentSnapshot>() {
            @Override
            public void onEvent(@Nullable DocumentSnapshot documentSnapshot, @Nullable FirebaseFirestoreException e) {
                if (documentSnapshot != null && documentSnapshot.exists()) {
                    String url= documentSnapshot.getData().get("petPicture").toString();
                    Uri uri= Uri.parse(url);
                    petPc.setImageURI(uri);
                    ownerName.setText(documentSnapshot.getData().get("owner").toString());
                    petName.setText(documentSnapshot.getData().get("petName").toString());
                    disCrp.setText(documentSnapshot.getData().get("description").toString());
                    disCrp.setMovementMethod(new ScrollingMovementMethod());
                }
            }
        });

    }
-----------------------------------------
//THIS IS FOR THE SEARCH-Vincent/Sifaw
searchInput.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {

            }

            @Override
            public void afterTextChanged(Editable s) {
                filter(s.toString());
            }
        });
private void filter(String txt) {
        filteredList = new ArrayList<>();
        for(Usermodel user: userFilerInfo){
            if(user.getOwner().toLowerCase().contains(txt.toLowerCase()) ||
                    user.getPetType().toLowerCase().contains(txt.toLowerCase()) ||
                    user.getOwnerState().toLowerCase().contains(txt.toLowerCase())) {

                filteredList.add(user);
            }
        }
        usAdapter.filterList(filteredList);
    }
-----------------------------
//THIS IS FOR THE FEED-Sifaw/Vincent
ArrayList<Usermodel> userInfom = new ArrayList<>();//this acts as a dummy list
docref = db.collection("filers");
searchInput = view.findViewById(R.id.searchFilter);
...Vincent's code
 docref.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
            ArrayList<Usermodel> userInfo = new ArrayList<>();
            @Override
            public void onComplete(@NonNull Task<QuerySnapshot> task) {
                //feed information to display
                if(task.isSuccessful()){
                    String name;
                    String pet;
                    String stat;
                    String pic;
                    String id;
                    int index=0;
                    List<DocumentSnapshot> userList = task.getResult().getDocuments();
                    for(index=0;index<userList.size();index++){
                        int add = userList.get(index).get("Show").hashCode();
                        if(add==1) {//only shows filers that are needed
                            name = userList.get(index).get("owner").toString();
                            pet = userList.get(index).get("petType").toString();
                            stat = userList.get(index).get("ownerState").toString();
                            pic = userList.get(index).get("petPicture").toString();
                            id = userList.get(index).get("ID").toString();
                            userInfo.add(new Usermodel(name, pet, stat, pic,id));
                        }
                    }
                }
                userFilerInfo=userInfo;
                mAdapter = new UserAdapter(userInfo,SearchFragment.this);
                usAdapter= (UserAdapter) mAdapter;
                mRecView.setLayoutManager(mLayManger);
                mRecView.setAdapter(usAdapter);

            }

        });
        mRecView = view.findViewById(R.id.userFeedView);
        mRecView.setHasFixedSize(true);
        mLayManger= new LinearLayoutManager(getActivity());
        mAdapter= new UserAdapter(userInfom,this);
        //need this so it can actually show the information
        mRecView.setLayoutManager(mLayManger);
        mRecView.setAdapter(mAdapter);

        return view;
    }
